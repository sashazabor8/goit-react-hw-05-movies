{"version":3,"file":"static/js/511.7b7ce12c.chunk.js","mappings":"sIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C,uJClCMC,EAAM,mCACNC,EAAW,6BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,2GAA8BC,EAA9B,+BAAoC,GAAIC,EAAxC,+BAAiD,CAAC,EAAlD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMnB,QAAQT,OAAO,IAAI6B,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOR,EAAe,GAAD,OAChBD,EADgB,yCACyBD,EADzB,mBAGtB,CAEM,SAASW,EAAmBC,GACjC,OAAOV,EAAe,GAAD,OAChBD,EADgB,oBACIW,EADJ,oBACkBZ,EADlB,mBAGtB,CAEM,SAASa,EAAqBC,GACnC,OAAOZ,EAAe,GAAD,OAChBD,EADgB,mCACmBD,EADnB,kBACgCc,EADhC,mBAGtB,CAEM,SAASC,EAAmBH,GACjC,OAAOV,EAAe,GAAD,OAChBD,EADgB,oBACIW,EADJ,4BAC0BZ,EAD1B,mBAGtB,CAEM,SAASgB,EAAsBJ,GACpC,OAAOV,EAAe,GAAD,OAChBD,EADgB,oBACIW,EADJ,4BAC0BZ,EAD1B,mBAGtB,C,oHCxBD,MAVA,WACE,OAA4BiB,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,MAAsBpB,KAAK6B,EAC5B,GAAE,KAEI,8BAAGD,IAAU,SAACG,EAAA,EAAD,CAAYH,OAAQA,KACzC,C,kECXD,GAAgB,QAAU,4BAA4B,KAAO,0B,SCgB7D,MAdA,YAAiC,IAAXA,EAAU,EAAVA,OACpB,OACE,oBAASI,UAAWC,EAAAA,QAApB,UACE,eAAID,UAAWC,EAAAA,KAAf,SACGL,EAAOM,QAAQC,KAAI,SAAAC,GAAK,OACvB,eAAmBJ,UAAWC,EAAAA,KAA9B,UACE,SAAC,KAAD,CAAMI,GAAE,kBAAaD,EAAMd,IAA3B,SAAkCc,EAAME,SADjCF,EAAMd,GADQ,OAQhC,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/api.js","views/HomeView/HomePage.js","webpack://react-homework-template/./src/views/ListMovies/ListMovies.module.css?6312","views/ListMovies/ListMovies.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const KEY = 'bee84003116e0d7efbcdf8ada59f5536';\nconst BASE_URL = 'https://api.themoviedb.org';\n\nasync function baseFetchMovie(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function trendingMoviesFetch() {\n  return baseFetchMovie(\n    `${BASE_URL}/3/trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function infoMovieByIdFetch(id) {\n  return baseFetchMovie(\n    `${BASE_URL}/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function infoMovieByNameFetch(name) {\n  return baseFetchMovie(\n    `${BASE_URL}/3/search/movie?api_key=${KEY}&query=${name}&language=en-US`\n  );\n}\n\nexport function castMovieByIdFetch(id) {\n  return baseFetchMovie(\n    `${BASE_URL}/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function reviewsMovieByIdFetch(id) {\n  return baseFetchMovie(\n    `${BASE_URL}/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { trendingMoviesFetch } from '../../api/api';\nimport ListMovies from 'views/ListMovies';\n\nfunction HomeView() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    trendingMoviesFetch().then(setMovies);\n  }, []);\n\n  return <>{movies && <ListMovies movies={movies} />}</>;\n}\n\nexport default HomeView;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ListMovies_section__b2f-7\",\"item\":\"ListMovies_item__TNDE5\"};","import { Link } from 'react-router-dom';\nimport s from './ListMovies.module.css';\n\nfunction ListMovies({ movies }) {\n  return (\n    <section className={s.section}>\n      <ul className={s.list}>\n        {movies.results.map(movie => (\n          <li key={movie.id} className={s.item}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default ListMovies;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","KEY","BASE_URL","baseFetchMovie","url","config","fetch","response","ok","json","Error","trendingMoviesFetch","infoMovieByIdFetch","id","infoMovieByNameFetch","name","castMovieByIdFetch","reviewsMovieByIdFetch","useState","movies","setMovies","useEffect","ListMovies","className","s","results","map","movie","to","title"],"sourceRoot":""}